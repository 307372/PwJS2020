Raport II: Stan projektu

Z planowanych w deklaracji projektu funkcji część założeń już mi się udało osiągnąć, omówię teraz po kolei ich kompletność:

"Makra do myszy i klawiatury pisane z klawiatury"
- W tym przypadku postanowiłem odejść od założonego pisania makr z klawiatury, na rzecz "składania" makr z gotowych
elementów (o nazwach w języku naturalnym), które to użytkownik sobie wybiera z listy, dodaje do makra i ustawia pożądane
przez niego parametry. Uważam, że znacząco uprości to naukę korzystania z programu dla osób, które nigdy nie programowały.
Prace nad tym systemem trwają.

"Autoclicker do przycisków na myszy i klawiaturze"
- Autoclicker dla myszy jest już gotowy i w pełni funkcjonalny, natomiast autoclicker dla klawiatury będzie możliwy
po "złożeniu" trywialnego makra wg wymienionego wcześniej systemu.

"Działanie programu w systemie Windows"
- Po odkryciu jak naciągana jest kompatybilność bibliotek keyboard i mouse z systemem linux, skupiłem się w pełni na
kompatybilności mojego programu z systemem Windows i jak do tej pory nie ma z tym żadnego problemu. Ze wstępnych
informacji, jakie pozyskałem w temacie przetwarzania plików .py na .exe wynika, że nie powinno być z tym problemu.
Plik ten przygotuję do prototypu programu.

"Opcja 'Nagrywania' makr zamiast pisania ich"
- Dosyć mocno skupiłem się na tym aspekcie programu i stwierdzam, że funkcja ta (włącznie z odtwarzaniem) jest w
większości gotowa. Są pewne aspekty, które wymagają dalszych testów, jednak samo nagrywanie, prosta edycja nagrań i
odtwarzanie z poziomu edytora nagrań są sprawne.

"Prosty password manager"
- Na początku projektu wydawało mi się, że zajmie on znacznie mniej czasu, ze względu na znalezienie bibliotek keyboard
i mouse, które wyglądały jakby były wprost stworzone dla mojego projektu. Na papierze posiadały one wszystkie funkcje,
których bym potrzebował. Jednak bardzo szybko się okazało, że keyboard i mouse nie były jakości bibliotek standardowych
(np. wypisywanie słów zawierających duże litery alfabetu crashuje program pod linuxem, a klikanie myszką pod linuxem po
prostu nie działa). Nauka PySide2 też zajmuje mi dosyć sporo czasu, więc obawiam się, że do 25.05 raczej się nie wyrobię z
tym feature'm tak, żeby wyciągnięcie z niego haseł było autentycznie nietrywialne. Zamiast tego skupię się raczej na
doszlifowaniu głównego programu i jego funkcjonalności.



Technologie:
UI: PyQt
Zdecydowałem się użyć raczej PySide, ale to w sumie do pewnego stopnia to samo.

Obsługa klawiatury: https://pypi.org/project/keyboard/
Obsługa myszy: https://pypi.org/project/mouse/
Zapoznałem się z tymi bibliotekami na tyle dokładnie, że choćbym chciał, to już nie ma sensu ich zmieniać na tym etapie.

Konwersja plików .py do .exe: https://pypi.org/project/PyInstaller/